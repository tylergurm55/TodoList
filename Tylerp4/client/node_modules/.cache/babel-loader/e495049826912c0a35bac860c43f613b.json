{"ast":null,"code":"var _jsxFileName = \"/Users/tylergurman/ga/unit3/project/TodoList/Tylerp4/client/src/components/LoginForm.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitForm = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const handleLogin = this.props.handleLogin;\n\n      try {\n        await handleLogin({\n          email,\n          password\n        });\n      } catch (e) {\n        this.setState(state => {\n          return {\n            showError: true\n          };\n        });\n      }\n    };\n\n    this.handleTextInput = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState(state => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      showError: false\n    };\n  }\n\n  render() {\n    const isSignedIn = this.props.isSignedIn;\n    const showError = this.state.showError;\n    let errorMessage;\n\n    if (showError) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"An error occured, please try again\"));\n    }\n\n    if (isSignedIn) {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Login\"), errorMessage, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleTextInput,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleTextInput,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/tylergurman/ga/unit3/project/TodoList/Tylerp4/client/src/components/LoginForm.js"],"names":["React","Redirect","LoginForm","Component","constructor","props","handleSubmitForm","event","preventDefault","state","email","password","handleLogin","e","setState","showError","handleTextInput","target","name","value","render","isSignedIn","errorMessage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Redirect} from 'react-router'\n\nclass  LoginForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state= {\n            email: \"\",\n            password: \"\",\n            showError: false\n        }\n    }\n\nhandleSubmitForm = async (event) => {\n    event.preventDefault()\n    const { email, password } = this.state\n    const { handleLogin } = this.props\n\n\n    try {\n        await handleLogin({ email, password})\n    } catch(e) {\n        this.setState(state => {\n            return { showError: true }\n        })\n\n    }\n}\n\nhandleTextInput = (event) => {\n    const { name, value }= event.target\n\n    this.setState(state => {\n        return { [name] : value}\n    })\n}\n\n    render() {\n        const { isSignedIn} = this.props\n        const { showError } = this.state\n\n        let errorMessage\n\n        if(showError) {\n            errorMessage = (\n                <div className=\"errorMessage\">\n                    <span>An error occured, please try again</span>\n                </div>\n            )\n        }\n        if (isSignedIn) {\n            return <Redirect to=\"/dashboard\" />\n        }\n        return( \n            <div>\n                <h1>Login</h1>\n                { errorMessage}\n                <form className=\"form\" onSubmit={this.handleSubmitForm}>\n                    <div>\n                        <label>Email</label>\n                        <input\n                        type=\"text\"\n                        name=\"email\"\n                        onChange={this.handleTextInput}\n                        value={this.state.email}\n                         />\n                    </div>\n                    <div>\n                        <label>Password</label>\n                        <input\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={this.handleTextInput}\n                        value={this.state.password}\n                         />\n                    </div>\n                    <button>Login</button>\n                </form>\n            </div>\n            )\n    }\n\n}\n\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}